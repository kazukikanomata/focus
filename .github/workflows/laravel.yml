name: Deploy to ConohaWING

on:
  push:
    branches: [ "main" ]

  pull_request:
    branches: [ "main" ]

jobs:
  laravel-tests:
    runs-on: ubuntu-latest
# mysqlの設定
		services:
			mysql:
				image: mysql:8.0
				env:
					MYSQL_ROOT_PASSWORD: kazuki6061
		      MYSQL_DATABASE: focus
				ports:
					- 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
		env:
			DB_CONNECTION=mysql
			DB_HOST=127.0.0.1
			DB_PORT=3306
			DB_DATABASE=focus
			DB_USERNAME=kazuki
			DB_PASSWORD=25251061k

    steps:
      - uses: actions/checkout@v2
      - name: Setup PHP
      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'

      - name: cache vendor
        id: cache
        uses: actions/cache@v1
        with:
          ref: main
          path: ./vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"

      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Generate key
        run: php artisan key:generate

      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache

      - name: Install front-end dependencies
        run: |
          npm install
          npm run dev
      
  deploy:
    runs-on: ubuntu-latest
		needs: laravel-tests
    steps:
      - uses: actions/checkout@v3
      - name: .ssh directory prepare
        run: mkdir -p .ssh && chmod 700 .ssh

      - name: ssh key generate
        run: echo "$SSH_KEY" > .ssh/id_rsa && chmod 600 .ssh/id_rsa
        env:
          SSH_KEY: ${{ secrets.SSH_KEY }}

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list

      - name: Install dependencies
        run: npm install

      - name: Build
        run: npm run build
      
      - name: deploy at remote server
        uses: appleboy/ssh-action@master
        with:
          host:     ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key:      ${{ secrets.SSH_KEY }}
          port:     ${{ secrets.SSH_PORT }}
          envs: DIR
          script_stop: true
          script: |
            source .bashrc
            cd $DIR
            git pull origin master -f
            composer.phar install
            php artisan migrate:refresh
            php artisan db:seed --class=CategoriesTableSeeder
        env:
          DIR: ./src
